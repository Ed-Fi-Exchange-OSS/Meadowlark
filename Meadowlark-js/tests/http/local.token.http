#
# SIGNING KEY
#

### Generate a signing key. Save to .env as 
# SIGNING_KEY=<paste here>
GET http://localhost:3000/local/createKey

#
# AUTHENTICATE
#

### should succeed, vendor 1 (JSON)
POST http://localhost:3000/local/api/oauth/token
content-type: application/json

{
    "grant_type": "client_credentials",
    "client_id": "meadowlark_key_1",
    "client_secret": "meadowlark_secret_1"
}

### should succeed, vendor 1 (form encoded)
POST http://localhost:3000/local/api/oauth/token
content-type: application/x-www-form-urlencoded

grant_type=client_credentials
&client_id=meadowlark_key_1
&client_secret=meadowlark_secret_1

### should succeed, vendor 1 (form encoded, alternate using basic auth)
# @name client1
POST http://localhost:3000/local/api/oauth/token
content-type: application/x-www-form-urlencoded
authorization: Basic bWVhZG93bGFya19rZXlfMTptZWFkb3dsYXJrX3NlY3JldF8x

grant_type=client_credentials


### should succeed, vendor 2
# @name client2
POST http://localhost:3000/local/api/oauth/token
content-type: application/x-www-form-urlencoded

grant_type=client_credentials
&client_id=meadowlark_key_2
&client_secret=meadowlark_secret_2

### mix & match - should fail - expect 401
POST http://localhost:3000/local/api/oauth/token
content-type: application/x-www-form-urlencoded

grant_type=client_credentials
&client_id=meadowlark_key_1
&client_secret=meadowlark_secret_2

### completely bogus - should fail - expect 401
POST http://localhost:3000/local/api/oauth/token
content-type: application/x-www-form-urlencoded

grant_type=client_credentials
&client_id=meadowlark_key_1_bogus
&client_secret=meadowlark_secret_1_bogus

#
# VERIFY
#

### An expired token
GET http://localhost:3000/local/verify
Authorization: bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJlZC1maS1tZWFkb3dsYXJrIiwiYXVkIjoibWVhZG93bGFyayIsInN1YiI6InN1cGVyLWdyZWF0LVNJUyIsImp0aSI6ImY0Njk2MmI0LTM4ODUtNGNiYi1hOGI5LTJmOTU2OThjZDNlNSIsImlhdCI6MTY1NTI0NDkxNywiZXhwIjoxNzE4NDAxfQ.vuh5OSYZnZ30d0EmTLcesKSFnB7U_g2N0JS9sVvDzcI


### A token that will last until 2091
GET http://localhost:3000/local/verify
Authorization: bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJlZC1maS1tZWFkb3dsYXJrIiwiYXVkIjoibWVhZG93bGFyayIsInJvbGVzIjpbInZlbmRvciJdLCJzdWIiOiJzdXBlci1ncmVhdC1TSVMiLCJqdGkiOiI4MjVkNDRiOC1hODExLTRjZmYtYmVmOC1jYzhhNjYxNjliZTAiLCJpYXQiOjE2NTg1MjQyMzUsImV4cCI6MzgxOTUyNzgzNX0.rwgDguAxPgJDLRiADLEK9dN-9n8ZJdxU3SpTbJDQRV8

### Vendor 1 token
@authToken1 = {{client1.response.body.$.access_token}}

GET http://localhost:3000/local/verify
Authorization: bearer {{authToken1}}

### Vendor 2 token
@authToken2 = {{client2.response.body.$.access_token}}

GET http://localhost:3000/local/verify
Authorization: bearer {{authToken2}}

### Test a token that has been tampered with by changing the subject - expect 400
GET http://localhost:3000/local/verify
Authorization: bearer a{{authToken2}}

### Gibberish token - expect 400
GET http://localhost:3000/local/verify
Authorization: bearer gibberish

### No token - expect 400
GET http://localhost:3000/local/verify
Authorization: bearer 

### Host Token - Should return FULL_ACCESS auth
GET http://localhost:3000/local/verify
Authorization: bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJlZC1maS1tZWFkb3dsYXJrIiwiYXVkIjoibWVhZG93bGFyayIsInJvbGVzIjpbImhvc3QiXSwic3ViIjoic3VwZXItZ3JlYXQtU0lTIiwianRpIjoiODI1ZDQ0YjgtYTgxMS00Y2ZmLWJlZjgtY2M4YTY2MTY5YmUwIiwiaWF0IjoxNjU4NTI0MjM1LCJleHAiOjI2NTg1Mjc4MzV9.8JV9V_-YhxfXz05k9XblkLcxFRMl-FmN_gKiME69QHM

### Missing roles should return invalid_token - Roles are missing or roles are invalid on token
GET http://localhost:3000/local/verify
Authorization: bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJlZC1maS1tZWFkb3dsYXJrIiwiYXVkIjoibWVhZG93bGFyayIsInN1YiI6InN1cGVyLWdyZWF0LVNJUyIsImp0aSI6IjgyNWQ0NGI4LWE4MTEtNGNmZi1iZWY4LWNjOGE2NjE2OWJlMCIsImlhdCI6MTY1ODUyNDIzNSwiZXhwIjoyNjU4NTI3ODM1fQ.iWGgKL7Mg-Vl1ZvKTLaykZ9g5UqgcEYmAJgIVTOZCgk

#
# POST (Requires ACCESS_TOKEN_REQUIRED=true environment variable)
#

### Student owned by Vendor 1
POST http://localhost:3000/local/v3.3b/ed-fi/students/
content-type: application/json
Authorization: bearer {{authToken1}}

{ 
    "studentUniqueId": "1",
    "firstName": "Vendor",
    "lastSurname": "One",
    "birthDate": "2001-01-01"
}

### Student owned by Vendor 2
POST http://localhost:3000/local/v3.3b/ed-fi/students/
content-type: application/json
Authorization: bearer {{authToken2}}

{ 
    "studentUniqueId": "2",
    "firstName": "Vendor",
    "lastSurname": "Two",
    "birthDate": "2002-02-02"
}

### Vendor 1 attempts to POST on top of Vendor 2 Student - this is delegated to PUT under the covers - should fail - expect 404
POST http://localhost:3000/local/v3.3b/ed-fi/students/
content-type: application/json
Authorization: bearer {{authToken1}}

{ 
    "studentUniqueId": "2",
    "firstName": "Vendor",
    "lastSurname": "Two",
    "birthDate": "2002-02-02"
}

#
# GET by id (Requires ACCESS_TOKEN_REQUIRED=true environment variable)
#

### Vendor 1 GET of Student owned by Vendor 1
GET http://localhost:3000/local/v3.3b/ed-fi/students/utYLCfYQU8S8rId4Zhnh7ff_qVJuBVvuPsHNFw
Authorization: bearer {{authToken1}}

### Vendor 1 GET of Student owned by Vendor 2 - should fail - expect 404
GET http://localhost:3000/local/v3.3b/ed-fi/students/ocMiTYZuplv3KoW3scR2KJxtJWk_RnGebuEdiQ
Authorization: bearer {{authToken1}}

### Vendor 2 GET of Student owned by Vendor 2
GET http://localhost:3000/local/v3.3b/ed-fi/students/ocMiTYZuplv3KoW3scR2KJxtJWk_RnGebuEdiQ
Authorization: bearer {{authToken2}}

### Vendor 2 GET of Student owned by Vendor 1 - should fail - expect 404
GET http://localhost:3000/local/v3.3b/ed-fi/students/utYLCfYQU8S8rId4Zhnh7ff_qVJuBVvuPsHNFw
Authorization: bearer {{authToken2}}

#
# PUT by id (Requires ACCESS_TOKEN_REQUIRED=true environment variable)
#

### Vendor 2 PUT for Student owned by Vendor 2
PUT http://localhost:3000/local/v3.3b/ed-fi/students/ocMiTYZuplv3KoW3scR2KJxtJWk_RnGebuEdiQ
content-type: application/json
Authorization: bearer {{authToken2}}

{ 
    "studentUniqueId": "2",
    "firstName": "Vendor",
    "lastSurname": "Two - Updated",
    "birthDate": "2002-02-02"
}

### Vendor 1 attempts to PUT on top of Vendor 2 Student - should fail - expect 404
PUT http://localhost:3000/local/v3.3b/ed-fi/students/ocMiTYZuplv3KoW3scR2KJxtJWk_RnGebuEdiQ
content-type: application/json
Authorization: bearer {{authToken1}}

{ 
    "studentUniqueId": "2",
    "firstName": "Vendor",
    "lastSurname": "Two - Updated",
    "birthDate": "2002-02-02"
}

#
# DELETE by id (Requires ACCESS_TOKEN_REQUIRED=true environment variable)
#

### Vendor 1 DELETE of Student owned by Vendor 1
DELETE http://localhost:3000/local/v3.3b/ed-fi/students/utYLCfYQU8S8rId4Zhnh7ff_qVJuBVvuPsHNFw
Authorization: bearer {{authToken1}}

### Vendor 1 DELETE of Student owned by Vendor 2 - should fail - expect 404
DELETE http://localhost:3000/local/v3.3b/ed-fi/students/ocMiTYZuplv3KoW3scR2KJxtJWk_RnGebuEdiQ
Authorization: bearer {{authToken1}}
