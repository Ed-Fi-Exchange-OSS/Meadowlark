# This file is meant to be used in Visual Studio Code with the popular "REST Client" extension.

# This file will allow you to quickly exercise many of the basic features of the Meadowlark API,
# Each HTTP request is part of a larger scenario, and is meant to be sent in order. The comment
# above each HTTP action explains the request and expected result (sometimes an error). Click
# on "Send Request" in between the comment and the HTTP action to execute the request.

# Note that delays of a few seconds on the first call to an HTTP action are due to Lambda cold starts.
# For this proof-of-concept, the MetaEd model is being loaded and Meadowlark's API surface
# is being computed and cached on the Lambda. Subsequent calls to the same HTTP action (e.g. POST)
# will be much faster, at least until AWS reclaims that Lambda due to inactivity.

# Ensure you have followed the DEPLOYMENT.md instructions. You should have deployed with ACCESS_TOKEN_REQUIRED=true
# and have loaded descriptors with "yarn load:descriptors:aws-dev".

# **** Change this to be the hostname portion of the endpoint URLs displayed at the end of the deployment process.
@hostname=changeMe.execute-api.us-east-1.amazonaws.com
@stage=dev

# FYI, this is a non-expiring bearer token that is valid in the default configuration for the OAuth 2.0 proof-of-concept. 
@token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJlZC1maS1tZWFkb3dsYXJrIiwiYXVkIjoibWVhZG93bGFyayIsInN1YiI6InN1cGVyLWdyZWF0LVNJUyIsImp0aSI6IjNkNTliNzVmLWE3NjItNGJhYS05MTE2LTE5YzgyZmRmOGRlMyIsImlhdCI6MTYzNjU2MjA2MCwiZXhwIjozODQ1NTQ4ODgxfQ.WF5ABFZAvNsLDZktwa8VxDR846fGptRXJObtQitbL8I

# -----------------------------------------------------------------------------
# Verify service is running
# -----------------------------------------------------------------------------
GET https://{{hostname}}/{{stage}}/


# -----------------------------------------------------------------------------
# Authorization
# -----------------------------------------------------------------------------


### Try creating a new resource with authorization header - expect success.
### (Cold start for POST means this may take up to 5 seconds. If you get a 400 error with invalid descriptor, see above
### on loading descriptors.)
POST https://{{hostname}}/{{stage}}/v3.3b/ed-fi/educationContents
Authorization: bearer {{token}}

{
    "contentIdentifier": "different",
    "namespace": "4321",
    "shortDescription": "abc",
    "contentClassDescriptor": "uri://ed-fi.org/ContentClassDescriptor#Presentation",
    "learningResourceMetadataURI": "2143"
}


### Try getting that resource using the same authorization header that created the record - expect success.
### (Cold start for GET means this may take up to 5 seconds.)
GET https://{{hostname}}/{{stage}}/v3.3b/ed-fi/educationContents/b6b6e9604a327df2fbb1a32ff746ccc9b6f0c37f535950c3eeab373a
Authorization: bearer {{token}}


### Try getting that resource without authorization header - expect 401 Unauthorized.
GET https://{{hostname}}/{{stage}}/v3.3b/ed-fi/educationContents/b6b6e9604a327df2fbb1a32ff746ccc9b6f0c37f535950c3eeab373a



# -----------------------------------------------------------------------------
# Schools - Create, Update (with descriptor validation), Query, Delete
# -----------------------------------------------------------------------------


### Create a School
POST https://{{hostname}}/{{stage}}/v3.3b/ed-fi/schools
Authorization: bearer {{token}}

{
    "schoolId": 122,
    "nameOfInstitution": "School122",
    "educationOrganizationCategories" : [
        {
            "educationOrganizationCategoryDescriptor": "uri://ed-fi.org/EducationOrganizationCategoryDescriptor#Other"
        }
    ],
    "schoolCategories": [
        {
             "schoolCategoryDescriptor": "uri://ed-fi.org/SchoolCategoryDescriptor#All Levels"
        }
    ],
    "gradeLevels": []
}


### View all schools - should be one with id 7a5cf3f4a68015c0922e24c73401a21e9fd1767ef60c0b3300f2301e
GET https://{{hostname}}/{{stage}}/v3.3b/ed-fi/schools
Authorization: bearer {{token}}


### Query for a school named 'School1' - should not return any
GET https://{{hostname}}/{{stage}}/v3.3b/ed-fi/schools?nameOfInstitution=School1
Authorization: bearer {{token}}


### Query for a school named 'School122' - should return result
GET https://{{hostname}}/{{stage}}/v3.3b/ed-fi/schools?nameOfInstitution=School122
Authorization: bearer {{token}}


### Attempt to update the school with an invalid educationOrganizationCategoryDescriptor - should fail
### (Cold start for PUT means this may take up to 5 seconds.)
PUT https://{{hostname}}/{{stage}}/v3.3b/ed-fi/schools/7a5cf3f4a68015c0922e24c73401a21e9fd1767ef60c0b3300f2301e
Authorization: bearer {{token}}

{
    "schoolId": 122,
    "nameOfInstitution": "A School",
    "educationOrganizationCategories" : [
        {
            "educationOrganizationCategoryDescriptor": "uri://ed-fi.org/EducationOrganizationCategoryDescriptor#Invalid"
        }
    ],
    "schoolCategories": [
        {
             "schoolCategoryDescriptor": "uri://ed-fi.org/SchoolCategoryDescriptor#All Levels"
        }
    ],
    "gradeLevels": []
}


### Attempt to update the school with a valid educationOrganizationCategoryDescriptor - should succeed
PUT https://{{hostname}}/{{stage}}/v3.3b/ed-fi/schools/7a5cf3f4a68015c0922e24c73401a21e9fd1767ef60c0b3300f2301e
Authorization: bearer {{token}}

{
    "schoolId": 122,
    "nameOfInstitution": "A School",
    "educationOrganizationCategories" : [
        {
            "educationOrganizationCategoryDescriptor": "uri://ed-fi.org/EducationOrganizationCategoryDescriptor#School"
        }
    ],
    "schoolCategories": [
        {
             "schoolCategoryDescriptor": "uri://ed-fi.org/SchoolCategoryDescriptor#All Levels"
        }
    ],
    "gradeLevels": []
}


### Attempt to delete the school - should succeed
### (Cold start for DELETE means this may take up to 5 seconds.)
DELETE https://{{hostname}}/{{stage}}/v3.3b/ed-fi/schools/7a5cf3f4a68015c0922e24c73401a21e9fd1767ef60c0b3300f2301e
Authorization: bearer {{token}}


### View all schools - should be none. If still there, try again - maybe went too fast
# and DynamoDB eventual consistency is not yet consistent.
GET https://{{hostname}}/{{stage}}/v3.3b/ed-fi/schools
Authorization: bearer {{token}}
