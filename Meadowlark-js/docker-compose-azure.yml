# SPDX-License-Identifier: Apache-2.0
# Licensed to the Ed-Fi Alliance under one or more agreements.
# The Ed-Fi Alliance licenses this file to you under the Apache License, Version 2.0.
# See the LICENSE and NOTICES files in the project root for more information.

version: '3.8'

services:
  # Meadowlark API
  meadowlark-api-ml-azure:
    image: ${CONTAINER_REGISTRY}/meadowlark-api:latest
    container_name: meadowlark-api-ml-azure
    hostname: api
    domainname: "${AZURE_DOMAIN_NAME:-meadowlark-stg}"
    ports:
      - 3000:3000
    environment:
      OAUTH_SIGNING_KEY: ${OAUTH_SIGNING_KEY}
      # Next three settings should not be used as such in production environment
      OAUTH_HARD_CODED_CREDENTIALS_ENABLED: ${OAUTH_HARD_CODED_CREDENTIALS_ENABLED:-true}
      OWN_OAUTH_CLIENT_ID_FOR_CLIENT_AUTH: ${OWN_OAUTH_CLIENT_ID_FOR_CLIENT_AUTH:-meadowlark_verify-only_key_1}
      OWN_OAUTH_CLIENT_SECRET_FOR_CLIENT_AUTH: ${OWN_OAUTH_CLIENT_SECRET_FOR_CLIENT_AUTH:-meadowlark_verify-only_secret_1}
      OAUTH_SERVER_ENDPOINT_FOR_OWN_TOKEN_REQUEST: ${OAUTH_SERVER_ENDPOINT_FOR_OWN_TOKEN_REQUEST:-http://localhost:3000/local/oauth/token}
      OAUTH_SERVER_ENDPOINT_FOR_TOKEN_VERIFICATION: ${OAUTH_SERVER_ENDPOINT_FOR_TOKEN_VERIFICATION:-http://localhost:3000/local/oauth/verify}
      OPENSEARCH_USERNAME: ${OPENSEARCH_USERNAME:-admin}
      OPENSEARCH_PASSWORD: ${OPENSEARCH_PASS:-admin}
      OPENSEARCH_ENDPOINT: ${OPENSEARCH_ENDPOINT:-http://opensearch:9200}
      DOCUMENT_STORE_PLUGIN: "${DOCUMENT_STORE_PLUGIN:-@edfi/meadowlark-mongodb-backend}"
      QUERY_HANDLER_PLUGIN: "${QUERY_HANDLER_PLUGIN:-@edfi/meadowlark-opensearch-backend}"
      LISTENER1_PLUGIN: "${LISTENER1_PLUGIN:-@edfi/meadowlark-opensearch-backend}"
      MONGO_URL: ${MONGODB_URI}
      FASTIFY_RATE_LIMIT: ${FASTIFY_RATE_LIMIT:-false}
      FASTIFY_PORT: ${FASTIFY_PORT:-3000}
      FASTIFY_NUM_THREADS: ${FASTIFY_NUM_THREADS:-10}
      MEADOWLARK_STAGE: ${MEADOWLARK_STAGE:-stg}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      IS_LOCAL: ${IS_LOCAL:-false}
      AUTHORIZATION_STORE_PLUGIN: "${AUTHORIZATION_STORE_PLUGIN:-@edfi/meadowlark-mongodb-backend}"
      BEGIN_ALLOWED_SCHOOL_YEAR: ${BEGIN_ALLOWED_SCHOOL_YEAR:-2022}
      END_ALLOWED_SCHOOL_YEAR: ${END_ALLOWED_SCHOOL_YEAR:-2034}
      ALLOW_TYPE_COERCION: ${ALLOW_TYPE_COERCION:-true}
      ALLOW__EXT_PROPERTY: ${ALLOW__EXT_PROPERTY:-true}
    restart: unless-stopped
    healthcheck:
      test: curl -s http://localhost:3000/local >/dev/null || exit 1
      interval: 30s
      timeout: 10s
      retries: 50

  # OpenSearch backend
  opensearch-ml-azure:
    image: opensearchproject/opensearch:2.5.0@sha256:f077efb452be64d3df56d74fe99fd63244704896edf6ead73a0f5decb95a40bf
    container_name: opensearch-ml-azure-node1
    hostname: opensearch
    environment:
      cluster.name: opensearch-cluster-ml-azure
      bootstrap.memory_lock: "true" # along with the memlock settings below, disables swapping
      OPENSEARCH_JAVA_OPTS: -Xms512m -Xmx512m # minimum and maximum Java heap size, recommend setting both to 50% of system RAM
      discovery.type: single-node
      DISABLE_INSTALL_DEMO_CONFIG: "true" # disables execution of install_demo_configuration.sh bundled with security plugin, which installs demo certificates and security configurations to OpenSearch
      DISABLE_SECURITY_PLUGIN: "true" # disables security plugin entirely in OpenSearch by setting plugins.security.disabled: true in opensearch.yml
    mem_limit: 2g
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536 # maximum number of open files for the OpenSearch user, set to at least 65536 on modern systems
        hard: 65536
    volumes:
      - opensearch-ml-azure-data:/usr/share/opensearch/data
    # Security is disabled, therefore not exposing any ports
    # ports:
    #   - 9200:9200
    #   - 9600:9600 # required for Performance Analyzer
    restart: unless-stopped
    healthcheck:
      test: curl -s http://localhost:9200/_cat/health >/dev/null || exit 1
      interval: 30s
      timeout: 10s
      retries: 50

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:2.5.0@sha256:1661c0ee4640e022e87416814f17196f009de627ff0504b8549a1ff6be90240e
    container_name: opensearch-dashboards-ml-azure
    ports:
      - 5602:5601
    environment:
      OPENSEARCH_HOSTS: '["http://opensearch-ml-azure-node1:9200"]'
      DISABLE_SECURITY_DASHBOARDS_PLUGIN: true # disables security dashboards plugin in OpenSearch Dashboards
    restart: unless-stopped


  # Primary MongoDB node
  mongo1:
    image: ${CONTAINER_REGISTRY}/meadowlark-mongodb:4.0.28
    container_name: mongo1-ml-azure
    hostname: mongo1
    # Note fully secured (certificate), therefore not exposting a port
    # ports:
    #   - 27017:27017
    restart: unless-stopped
    healthcheck:
      test: echo 'db.runCommand({serverStatus:1}).ok' | mongo admin -u ${MONGODB_USER:-mongo} -p ${MONGODB_PASS:-abcdefgh1!} --quiet | grep 1
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 20s
    command:
      [
        "/usr/bin/mongod",
        "--bind_ip_all",
        "--replSet",
        "rs0",
        "--journal",
        "--dbpath",
        "/data/db",
        "--enableMajorityReadConcern",
        "true",
        "--keyFile",
        "/auth/file.key"
      ]
    volumes:
      - mongo-ml-azure-data1:/data/db
      - mongo-ml-azure-log1:/var/log/mongodb
      - mongo-ml-azure-auth:/auth
      - ./backends/meadowlark-mongodb-backend/docker/scripts:/scripts

  # Secondary MongoDB node
  mongo2:
    image: ${CONTAINER_REGISTRY}/meadowlark-mongodb:4.0.28
    container_name: mongo2-ml-azure
    hostname: mongo2
    # Note fully secured (certificate), therefore not exposting a port
    # ports:
    #   - 27018:27018
    restart: unless-stopped
    healthcheck:
      test: echo 'db.runCommand({serverStatus:1}).ok' | mongo admin -u ${MONGODB_USER:-mongo} -p ${MONGODB_PASS:-abcdefgh1!} --quiet | grep 1
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 20s
    command:
      [
        "/usr/bin/mongod",
        "--bind_ip_all",
        "--replSet",
        "rs0",
        "--journal",
        "--dbpath",
        "/data/db",
        "--enableMajorityReadConcern",
        "true",
        "--port",
        "27018",
        "--keyFile",
        "/auth/file.key"
      ]
    volumes:
      - mongo-ml-azure-data2:/data/db
      - mongo-ml-azure-log2:/var/log/mongodb
      - mongo-ml-azure-auth:/auth

  # Secondary MongoDB node
  mongo3:
    image: ${CONTAINER_REGISTRY}/meadowlark-mongodb:4.0.28
    container_name: mongo3-ml-azure
    hostname: mongo3
    # Note fully secured (certificate), therefore not exposting a port
    # ports:
    #   - 27019:27019
    restart: unless-stopped
    healthcheck:
      test: echo 'db.runCommand({serverStatus:1}).ok' | mongo admin -u ${MONGODB_USER:-mongo} -p ${MONGODB_PASS:-abcdefgh1!} --quiet | grep 1
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 20s
    command:
      [
        "/usr/bin/mongod",
        "--bind_ip_all",
        "--replSet",
        "rs0",
        "--journal",
        "--dbpath",
        "/data/db",
        "--enableMajorityReadConcern",
        "true",
        "--port",
        "27019",
        "--keyFile",
        "/auth/file.key"
      ]
    volumes:
      - mongo-ml-azure-data3:/data/db
      - mongo-ml-azure-log3:/var/log/mongodb
      - mongo-ml-azure-auth:/auth

volumes:
  mongo-ml-azure-data1:
    driver: azure_file
    driver_opts:
      share_name: ${SHARE_NAME}0mongo1data
      storage_account_name: ${STORAGE_ACCOUNT_NAME}
  mongo-ml-azure-log1:
    driver: azure_file
    driver_opts:
      share_name: ${SHARE_NAME}0mongo1log
      storage_account_name: ${STORAGE_ACCOUNT_NAME}
  mongo-ml-azure-data2:
    driver: azure_file
    driver_opts:
      share_name: ${SHARE_NAME}0mongo2data
      storage_account_name: ${STORAGE_ACCOUNT_NAME}
  mongo-ml-azure-log2:
    driver: azure_file
    driver_opts:
      share_name: ${SHARE_NAME}0mongo2log
      storage_account_name: ${STORAGE_ACCOUNT_NAME}
  mongo-ml-azure-data3:
    driver: azure_file
    driver_opts:
      share_name: ${SHARE_NAME}0mongo3data
      storage_account_name: ${STORAGE_ACCOUNT_NAME}
  mongo-ml-azure-log3:
    driver: azure_file
    driver_opts:
      share_name: ${SHARE_NAME}0mongo3log
      storage_account_name: ${STORAGE_ACCOUNT_NAME}
  mongo-ml-azure-auth:
    driver: azure_file
    driver_opts:
      share_name: ${SHARE_NAME}0mongo0auth
      storage_account_name: ${STORAGE_ACCOUNT_NAME}
  opensearch-ml-azure-data:
    driver: azure_file
    driver_opts:
      share_name: ${SHARE_NAME}0search
      storage_account_name: ${STORAGE_ACCOUNT_NAME}
