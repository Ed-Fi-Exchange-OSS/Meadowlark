{
  "name": "meadowlark-js",
  "description": "The Ed-Fi Meadowlark project",
  "private": true,
  "devDependencies": {
    "@shelf/jest-mongodb": "^4.1.6",
    "@types/eslint": "^8.4.10",
    "@types/jest": "^29.4.1",
    "@types/node": "16.18.3",
    "@typescript-eslint/eslint-plugin": "5.42.0",
    "@typescript-eslint/parser": "5.42.0",
    "copyfiles": "^2.4.1",
    "cross-env": "^7.0.3",
    "env-cmd": "^10.1.0",
    "eslint": "8.26.0",
    "eslint-config-airbnb-base": "15.0.0",
    "eslint-config-prettier": "8.5.0",
    "eslint-config-typescript": "3.0.0",
    "eslint-plugin-import": "^2.26.0",
    "eslint-plugin-jasmine": "4.1.3",
    "eslint-plugin-json": "3.1.0",
    "eslint-plugin-prettier": "4.2.1",
    "jest": "^29.5.0",
    "jest-environment-node": "^29.2.2",
    "lerna": "^6.0.2",
    "mongodb": "^4.11.0",
    "pg": "^8.8.0",
    "pg-format": "^1.0.4",
    "prettier": "2.7.1",
    "rimraf": "^3.0.2",
    "ts-jest": "^29.0.5",
    "ts-node": "10.9.1",
    "typescript": "4.8.4"
  },
  "workspaces": [
    "backends/*",
    "packages/*",
    "services/*",
    "tests/*"
  ],
  "scripts": {
    "build": "lerna run build --stream",
    "build:clean": "lerna run build:clean --stream",
    "test": "npm run test:lint && npm run test:unit && npm run test:integration && npm run test:e2e",
    "test:lint": "npm run test:lint:ts && npm run test:lint:eslint",
    "test:lint:eslint": "eslint --max-warnings 0 --ext .js,.ts .",
    "test:lint:ts": "tsc -p . --noEmit",
    "test:unit": "cross-env NODE_OPTIONS=--max-old-space-size=6144 LOG_LEVEL=warn jest --projects tests/config/unit",
    "test:integration": "cross-env NODE_OPTIONS=--max-old-space-size=6144 LOG_LEVEL=warn jest --projects backends/meadowlark-mongodb-backend/test/config/integration backends/meadowlark-opensearch-backend/test/config/integration backends/meadowlark-postgresql-backend/test/config/integration --runInBand",
    "test:integration:mongodb": "cross-env NODE_OPTIONS=--max-old-space-size=6144 LOG_LEVEL=warn jest --projects backends/meadowlark-mongodb-backend/test/config/integration --runInBand",
    "test:integration:opensearch": "cross-env NODE_OPTIONS=--max-old-space-size=6144 LOG_LEVEL=warn jest --projects backends/meadowlark-opensearch-backend/test/config/integration --runInBand",
    "test:integration:postgresql": "cross-env NODE_OPTIONS=--max-old-space-size=6144 LOG_LEVEL=warn jest --projects backends/meadowlark-postgresql-backend/test/config/integration --runInBand",
    "test:unit:coverage": "rimraf coverage.unit/ && npm run test:unit",
    "test:unit:coverage:ci": "rimraf coverage.unit/ && npm run test:unit -- --maxWorkers=2 --ci",
    "test:integration:coverage": "rimraf coverage.integration/ && npm run test:integration -- --collectCoverage",
    "test:e2e": "cross-env NODE_OPTIONS=--max-old-space-size=6144 LOG_LEVEL=warn jest --projects tests/config/e2e --runInBand",
    "start:local": "lerna run start:local",
    "docker:lint": "cat ./Dockerfile | docker run --rm -i hadolint/hadolint",
    "docker:install": "npm i lerna@^6.0.2 rimraf@^3.0.2 copyfiles@^2.4.1 typescript@4.8.4 -g && npm ci --only=production",
    "docker:build": "docker build -t meadowlark .",
    "docker:build:wsl1": "docker.exe build -t meadowlark .",
    "docker:start": "docker run -d --env-file ./.env-docker --name ml-api -p 3000:3000 meadowlark",
    "docker:start:wsl1": "docker.exe run -d --env-file ./.env-docker --name ml-api -p 3000:3000 meadowlark",
    "docker:halt": "docker stop ml-api && docker rm ml-api",
    "docker:halt:wsl1": "docker.exe stop ml-api && docker rm ml-api",
    "docker:debug": "docker run -d --env-file ./.env-docker -p 3000:3000 --name ml-api meadowlark tail -F /dev/null && docker exec -it ml-api bash",
    "docker:debug:wsl1": "docker.exe run -d --env-file ./.env-docker -p 3000:3000 --name ml-api meadowlark tail -F /dev/null && docker exec -it ml-api bash",
    "compose:up": "docker compose --env-file .env-docker up -d",
    "compose:up:wsl1": "docker.exe compose --env-file .env-docker up -d",
    "compose:down": "docker compose --env-file .env-docker down",
    "compose:down:wsl1": "docker.exe compose --env-file .env-docker down",
    "compose:rm": "docker compose rm --stop --volumes --force && docker volume rm mongo-ml-local-auth && docker volume ls -q --filter label=edfi-ml | xargs docker volume rm",
    "compose:rm:wsl1": "docker.exe compose rm --stop --volumes --force && docker.exe volume rm mongo-ml-local-auth && docker.exe volume ls -q --filter label=edfi-ml | xargs docker.exe volume rm"
  }
}
