upsert:
  handler: dist/handler/CrudHandler.upsert
  events:
    - http:
        method: post
        path: /{proxy+}
        cors: true

getResolver:
  handler: dist/handler/CrudHandler.getResolver
  environment:
    ES_ENDPOINT:
      Fn::GetAtt: [ OpenSearchInstance, DomainEndpoint ]
  events:
    - http:
        method: get
        path: /{proxy+}
        cors: true

update:
  handler: dist/handler/CrudHandler.update
  events:
    - http:
        method: put
        path: /{proxy+}
        cors: true

deleteIt:
  handler: dist/handler/CrudHandler.deleteIt
  events:
    - http:
        method: delete
        path: /{proxy+}
        cors: true

metaed:
  handler: dist/handler/MetadataHandler.metaed
  events:
    - http:
        method: get
        path: /metaed/{projectAbbreviation}
        cors: true

apiVersion:
  handler: dist/handler/MetadataHandler.apiVersion
  events:
    - http:
        method: get
        path: /
        cors: true

openApiList:
  handler: dist/handler/MetadataHandler.openApiUrlList
  events:
    - http:
        method: get
        path: /metadata
        cors: true

swaggerForResourcesAPI:
  handler: dist/handler/MetadataHandler.swaggerForResourcesAPI
  environment:
    TOKEN_URL: ${self:provider.environment.TOKEN_URL}
  events:
    - http:
        method: get
        path: /metadata/resources/swagger.json
        cors: true

swaggerForDescriptorsAPI:
  handler: dist/handler/MetadataHandler.swaggerForDescriptorsAPI
  environment:
    TOKEN_URL: ${self:provider.environment.TOKEN_URL}
  events:
    - http:
        method: get
        path: /metadata/descriptors/swagger.json
        cors: true

updateExternalStorage:
  handler: ../../backends/meadowlark-aws-dynamodb-opensearch/dist/DynamoDbStreamHandler.updateExternalStorage
  environment:
    ES_ENDPOINT:
      Fn::GetAtt: [ OpenSearchInstance, DomainEndpoint ]
  events:
    - stream:
        type: dynamodb
        arn:
          Fn::GetAtt: [ entityTable, StreamArn ]
        startingPosition: LATEST
        batchSize: 1
        enabled: true

loadDescriptors:
  handler: dist/handler/DescriptorLoader.loadDescriptors
  timeout: 120

oauthToken:
  # In general I favor the 1 to 1 approach above. Experimenting here with handling of two different paths.
  handler: dist/handler/OAuthHandler.handler
  events:
    - http:
        method: post
        path: /api/oauth/token
        cors: true
    - http:
        method: get
        path: /createKey
        cors: true
    - http:
        method: get
        path: /verify
        cors: true
