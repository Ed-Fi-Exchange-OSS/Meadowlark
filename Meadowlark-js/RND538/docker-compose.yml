version: '3'

networks:
  mynetwork:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.10.0.0/24

volumes:
  mongo-ml-local-data1:
    labels:
      edfi-ml: local
  mongo-ml-local-log1:
    labels:
      edfi-ml: local
  mongo-ml-local-data2:
    labels:
      edfi-ml: local
  mongo-ml-local-log2:
    labels:
      edfi-ml: local
  mongo-ml-local-data3:
    labels:
      edfi-ml: local
  mongo-ml-local-log3:
    labels:
      edfi-ml: local
  mongo-ml-local-auth:
    external: true

services:
  # Primary MongoDB node
  mongo1:
    image: edfi-mongo:4.0.28
    container_name: mongo1
    hostname: mongo1
    ports:
      - 27027:27017
    restart: unless-stopped
    expose:
      - 27027
    networks:
      mynetwork:
        ipv4_address: 10.10.0.10
    environment:
      # These two only needed on mongo1
      ADMIN_USERNAME: ${MONGODB_USER:-edfiuser}
      ADMIN_PASSWORD: ${MONGODB_PASS:-gapuser1234}
    healthcheck: &mongohealth
      test: echo 'db.runCommand({serverStatus:1}).ok' | mongo admin -u ${MONGODB_USER:-edfiuser} -p ${MONGODB_PASS:-gapuser1234} --quiet | grep 1
      interval: 10s
      timeout: 10s
      retries: 3
      # Wait a bit for first time startup to complete
      start_period: 40s
    command: [ "/usr/local/bin/start-node1.sh" ]
    volumes:
      - mongo-ml-local-data1:/data/db
      - mongo-ml-local-log1:/var/log/mongodb
      - mongo-ml-local-auth:/auth

  # Secondary MongoDB node
  mongo2:
    image: edfi-mongo:4.0.28
    container_name: mongo2
    hostname: mongo2
    ports:
      - 27028:27017
    restart: unless-stopped
    expose:
      - 27028
    networks:
      mynetwork:
        ipv4_address: 10.10.0.11
    healthcheck:
      *mongohealth
    command: [ "/usr/local/bin/start.sh" ]
    volumes:
      - mongo-ml-local-data2:/data/db
      - mongo-ml-local-log2:/var/log/mongodb
      - mongo-ml-local-auth:/auth

  # Tertiary MongoDB node
  mongo3:
    image: edfi-mongo:4.0.28
    container_name: mongo3
    hostname: mongo3
    networks:
      mynetwork:
        ipv4_address: 10.10.0.12
    ports:
      - 27029:27017
    restart: unless-stopped
    expose:
      - 27029
    healthcheck:
      *mongohealth
    command: [ "/usr/local/bin/start.sh" ]
    volumes:
      - mongo-ml-local-data3:/data/db
      - mongo-ml-local-log3:/var/log/mongodb
      - mongo-ml-local-auth:/auth

  # Meadowlark API 1
  meadowlark-api-ml-local-1:
    # requires a local build, `npm run docker:build`.
    image: meadowlark:latest
    container_name: meadowlark-api-ml-local-1
    hostname: api
    ports:
      - 3001:3000
    networks:
      mynetwork:
        ipv4_address: 10.10.0.2
    environment:
      OAUTH_SIGNING_KEY: ${OAUTH_SIGNING_KEY}
      # Next three settings should not be used as such in production environment
      OAUTH_HARD_CODED_CREDENTIALS_ENABLED: ${OAUTH_HARD_CODED_CREDENTIALS_ENABLED:-true}
      OWN_OAUTH_CLIENT_ID_FOR_CLIENT_AUTH: ${OWN_OAUTH_CLIENT_ID_FOR_CLIENT_AUTH:-meadowlark_verify-only_key_1}
      OWN_OAUTH_CLIENT_SECRET_FOR_CLIENT_AUTH: ${OWN_OAUTH_CLIENT_SECRET_FOR_CLIENT_AUTH:-meadowlark_verify-only_secret_1}
      OAUTH_SERVER_ENDPOINT_FOR_OWN_TOKEN_REQUEST: ${OAUTH_SERVER_ENDPOINT_FOR_OWN_TOKEN_REQUEST:-http://localhost:3000/local/oauth/token}
      OAUTH_SERVER_ENDPOINT_FOR_TOKEN_VERIFICATION: ${OAUTH_SERVER_ENDPOINT_FOR_TOKEN_VERIFICATION:-http://localhost:3000/local/oauth/verify}
      OPENSEARCH_USERNAME: ${OPENSEARCH_USERNAME:-admin}
      OPENSEARCH_PASSWORD: ${OPENSEARCH_PASS:-admin}
      OPENSEARCH_ENDPOINT: ${OPENSEARCH_ENDPOINT:-http://opensearch:9200}
      DOCUMENT_STORE_PLUGIN: "${DOCUMENT_STORE_PLUGIN:-@edfi/meadowlark-mongodb-backend}"
      QUERY_HANDLER_PLUGIN: "${QUERY_HANDLER_PLUGIN:-@edfi/meadowlark-opensearch-backend}"
      LISTENER1_PLUGIN: "${LISTENER1_PLUGIN:-@edfi/meadowlark-opensearch-backend}"
      MONGO_URI: ${MONGO_URI}
      FASTIFY_RATE_LIMIT: ${FASTIFY_RATE_LIMIT:-false}
      FASTIFY_PORT: ${FASTIFY_PORT:-3000}
      FASTIFY_NUM_THREADS: ${FASTIFY_NUM_THREADS:-10}
      MEADOWLARK_STAGE: ${MEADOWLARK_STAGE:-local}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      IS_LOCAL: ${IS_LOCAL:-false}
      AUTHORIZATION_STORE_PLUGIN: "${AUTHORIZATION_STORE_PLUGIN:-@edfi/meadowlark-mongodb-backend}"
      BEGIN_ALLOWED_SCHOOL_YEAR: ${BEGIN_ALLOWED_SCHOOL_YEAR:-2022}
      END_ALLOWED_SCHOOL_YEAR: ${END_ALLOWED_SCHOOL_YEAR:-2034}
      ALLOW_TYPE_COERCION: ${ALLOW_TYPE_COERCION:-true}
      ALLOW__EXT_PROPERTY: ${ALLOW__EXT_PROPERTY:-true}
      MEADOWLARK_DATABASE_NAME: ${MEADOWLARK_DATABASE_NAME:-meadowlark}
      SAVE_LOG_TO_FILE: true
    restart: unless-stopped

  # Meadowlark API 2
  meadowlark-api-ml-local-2:
    # requires a local build, `npm run docker:build`.
    image: meadowlark:latest
    container_name: meadowlark-api-ml-local-2
    hostname: api
    ports:
      - 3002:3000
    networks:
      mynetwork:
        ipv4_address: 10.10.0.3
    environment:
      OAUTH_SIGNING_KEY: ${OAUTH_SIGNING_KEY}
      # Next three settings should not be used as such in production environment
      OAUTH_HARD_CODED_CREDENTIALS_ENABLED: ${OAUTH_HARD_CODED_CREDENTIALS_ENABLED:-true}
      OWN_OAUTH_CLIENT_ID_FOR_CLIENT_AUTH: ${OWN_OAUTH_CLIENT_ID_FOR_CLIENT_AUTH:-meadowlark_verify-only_key_1}
      OWN_OAUTH_CLIENT_SECRET_FOR_CLIENT_AUTH: ${OWN_OAUTH_CLIENT_SECRET_FOR_CLIENT_AUTH:-meadowlark_verify-only_secret_1}
      OAUTH_SERVER_ENDPOINT_FOR_OWN_TOKEN_REQUEST: ${OAUTH_SERVER_ENDPOINT_FOR_OWN_TOKEN_REQUEST:-http://localhost:3000/local/oauth/token}
      OAUTH_SERVER_ENDPOINT_FOR_TOKEN_VERIFICATION: ${OAUTH_SERVER_ENDPOINT_FOR_TOKEN_VERIFICATION:-http://localhost:3000/local/oauth/verify}
      OPENSEARCH_USERNAME: ${OPENSEARCH_USERNAME:-admin}
      OPENSEARCH_PASSWORD: ${OPENSEARCH_PASS:-admin}
      OPENSEARCH_ENDPOINT: ${OPENSEARCH_ENDPOINT:-http://opensearch:9200}
      DOCUMENT_STORE_PLUGIN: "${DOCUMENT_STORE_PLUGIN:-@edfi/meadowlark-mongodb-backend}"
      QUERY_HANDLER_PLUGIN: "${QUERY_HANDLER_PLUGIN:-@edfi/meadowlark-opensearch-backend}"
      LISTENER1_PLUGIN: "${LISTENER1_PLUGIN:-@edfi/meadowlark-opensearch-backend}"
      MONGO_URI: ${MONGO_URI}
      FASTIFY_RATE_LIMIT: ${FASTIFY_RATE_LIMIT:-false}
      FASTIFY_PORT: ${FASTIFY_PORT:-3000}
      FASTIFY_NUM_THREADS: ${FASTIFY_NUM_THREADS:-10}
      MEADOWLARK_STAGE: ${MEADOWLARK_STAGE:-local}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      IS_LOCAL: ${IS_LOCAL:-false}
      AUTHORIZATION_STORE_PLUGIN: "${AUTHORIZATION_STORE_PLUGIN:-@edfi/meadowlark-mongodb-backend}"
      BEGIN_ALLOWED_SCHOOL_YEAR: ${BEGIN_ALLOWED_SCHOOL_YEAR:-2022}
      END_ALLOWED_SCHOOL_YEAR: ${END_ALLOWED_SCHOOL_YEAR:-2034}
      ALLOW_TYPE_COERCION: ${ALLOW_TYPE_COERCION:-true}
      ALLOW__EXT_PROPERTY: ${ALLOW__EXT_PROPERTY:-true}
      MEADOWLARK_DATABASE_NAME: ${MEADOWLARK_DATABASE_NAME:-meadowlark}
      SAVE_LOG_TO_FILE: true
    restart: unless-stopped

  # Meadowlark API 3
  meadowlark-api-ml-local-3:
    # requires a local build, `npm run docker:build`.
    image: meadowlark:latest
    container_name: meadowlark-api-ml-local-3
    hostname: api
    ports:
      - 3003:3000
    networks:
      mynetwork:
        ipv4_address: 10.10.0.4
    environment:
      OAUTH_SIGNING_KEY: ${OAUTH_SIGNING_KEY}
      # Next three settings should not be used as such in production environment
      OAUTH_HARD_CODED_CREDENTIALS_ENABLED: ${OAUTH_HARD_CODED_CREDENTIALS_ENABLED:-true}
      OWN_OAUTH_CLIENT_ID_FOR_CLIENT_AUTH: ${OWN_OAUTH_CLIENT_ID_FOR_CLIENT_AUTH:-meadowlark_verify-only_key_1}
      OWN_OAUTH_CLIENT_SECRET_FOR_CLIENT_AUTH: ${OWN_OAUTH_CLIENT_SECRET_FOR_CLIENT_AUTH:-meadowlark_verify-only_secret_1}
      OAUTH_SERVER_ENDPOINT_FOR_OWN_TOKEN_REQUEST: ${OAUTH_SERVER_ENDPOINT_FOR_OWN_TOKEN_REQUEST:-http://localhost:3000/local/oauth/token}
      OAUTH_SERVER_ENDPOINT_FOR_TOKEN_VERIFICATION: ${OAUTH_SERVER_ENDPOINT_FOR_TOKEN_VERIFICATION:-http://localhost:3000/local/oauth/verify}
      OPENSEARCH_USERNAME: ${OPENSEARCH_USERNAME:-admin}
      OPENSEARCH_PASSWORD: ${OPENSEARCH_PASS:-admin}
      OPENSEARCH_ENDPOINT: ${OPENSEARCH_ENDPOINT:-http://opensearch:9200}
      DOCUMENT_STORE_PLUGIN: "${DOCUMENT_STORE_PLUGIN:-@edfi/meadowlark-mongodb-backend}"
      QUERY_HANDLER_PLUGIN: "${QUERY_HANDLER_PLUGIN:-@edfi/meadowlark-opensearch-backend}"
      LISTENER1_PLUGIN: "${LISTENER1_PLUGIN:-@edfi/meadowlark-opensearch-backend}"
      MONGO_URI: ${MONGO_URI}
      FASTIFY_RATE_LIMIT: ${FASTIFY_RATE_LIMIT:-false}
      FASTIFY_PORT: ${FASTIFY_PORT:-3000}
      FASTIFY_NUM_THREADS: ${FASTIFY_NUM_THREADS:-10}
      MEADOWLARK_STAGE: ${MEADOWLARK_STAGE:-local}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      IS_LOCAL: ${IS_LOCAL:-false}
      AUTHORIZATION_STORE_PLUGIN: "${AUTHORIZATION_STORE_PLUGIN:-@edfi/meadowlark-mongodb-backend}"
      BEGIN_ALLOWED_SCHOOL_YEAR: ${BEGIN_ALLOWED_SCHOOL_YEAR:-2022}
      END_ALLOWED_SCHOOL_YEAR: ${END_ALLOWED_SCHOOL_YEAR:-2034}
      ALLOW_TYPE_COERCION: ${ALLOW_TYPE_COERCION:-true}
      ALLOW__EXT_PROPERTY: ${ALLOW__EXT_PROPERTY:-true}
      MEADOWLARK_DATABASE_NAME: ${MEADOWLARK_DATABASE_NAME:-meadowlark}
      SAVE_LOG_TO_FILE: true
    restart: unless-stopped

  # Meadowlark OAuth 1
  meadowlark-oauth-ml-local-1:
    # requires a local build, `npm run docker:build`.
    image: meadowlark:latest
    container_name: meadowlark-oauth-ml-local-1
    hostname: api
    ports:
      - 3004:3000
    networks:
      mynetwork:
        ipv4_address: 10.10.0.5
    environment:
      OAUTH_SIGNING_KEY: ${OAUTH_SIGNING_KEY}
      # Next three settings should not be used as such in production environment
      OAUTH_HARD_CODED_CREDENTIALS_ENABLED: ${OAUTH_HARD_CODED_CREDENTIALS_ENABLED:-true}
      OWN_OAUTH_CLIENT_ID_FOR_CLIENT_AUTH: ${OWN_OAUTH_CLIENT_ID_FOR_CLIENT_AUTH:-meadowlark_verify-only_key_1}
      OWN_OAUTH_CLIENT_SECRET_FOR_CLIENT_AUTH: ${OWN_OAUTH_CLIENT_SECRET_FOR_CLIENT_AUTH:-meadowlark_verify-only_secret_1}
      OAUTH_SERVER_ENDPOINT_FOR_OWN_TOKEN_REQUEST: ${OAUTH_SERVER_ENDPOINT_FOR_OWN_TOKEN_REQUEST:-http://localhost:3000/local/oauth/token}
      OAUTH_SERVER_ENDPOINT_FOR_TOKEN_VERIFICATION: ${OAUTH_SERVER_ENDPOINT_FOR_TOKEN_VERIFICATION:-http://localhost:3000/local/oauth/verify}
      OPENSEARCH_USERNAME: ${OPENSEARCH_USERNAME:-admin}
      OPENSEARCH_PASSWORD: ${OPENSEARCH_PASS:-admin}
      OPENSEARCH_ENDPOINT: ${OPENSEARCH_ENDPOINT:-http://opensearch:9200}
      DOCUMENT_STORE_PLUGIN: "${DOCUMENT_STORE_PLUGIN:-@edfi/meadowlark-mongodb-backend}"
      QUERY_HANDLER_PLUGIN: "${QUERY_HANDLER_PLUGIN:-@edfi/meadowlark-opensearch-backend}"
      LISTENER1_PLUGIN: "${LISTENER1_PLUGIN:-@edfi/meadowlark-opensearch-backend}"
      MONGO_URI: ${MONGO_URI}
      FASTIFY_RATE_LIMIT: ${FASTIFY_RATE_LIMIT:-false}
      FASTIFY_PORT: ${FASTIFY_PORT:-3000}
      FASTIFY_NUM_THREADS: ${FASTIFY_NUM_THREADS:-10}
      MEADOWLARK_STAGE: ${MEADOWLARK_STAGE:-local}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      IS_LOCAL: ${IS_LOCAL:-false}
      AUTHORIZATION_STORE_PLUGIN: "${AUTHORIZATION_STORE_PLUGIN:-@edfi/meadowlark-mongodb-backend}"
      BEGIN_ALLOWED_SCHOOL_YEAR: ${BEGIN_ALLOWED_SCHOOL_YEAR:-2022}
      END_ALLOWED_SCHOOL_YEAR: ${END_ALLOWED_SCHOOL_YEAR:-2034}
      ALLOW_TYPE_COERCION: ${ALLOW_TYPE_COERCION:-true}
      ALLOW__EXT_PROPERTY: ${ALLOW__EXT_PROPERTY:-true}
      MEADOWLARK_DATABASE_NAME: ${MEADOWLARK_DATABASE_NAME:-meadowlark}
      SAVE_LOG_TO_FILE: true
    restart: unless-stopped

  # Meadowlark OAuth 2
  meadowlark-oauth-ml-local-2:
    # requires a local build, `npm run docker:build`.
    image: meadowlark:latest
    container_name: meadowlark-oauth-ml-local-2
    hostname: api
    ports:
      - 3005:3000
    networks:
      mynetwork:
        ipv4_address: 10.10.0.6
    environment:
      OAUTH_SIGNING_KEY: ${OAUTH_SIGNING_KEY}
      # Next three settings should not be used as such in production environment
      OAUTH_HARD_CODED_CREDENTIALS_ENABLED: ${OAUTH_HARD_CODED_CREDENTIALS_ENABLED:-true}
      OWN_OAUTH_CLIENT_ID_FOR_CLIENT_AUTH: ${OWN_OAUTH_CLIENT_ID_FOR_CLIENT_AUTH:-meadowlark_verify-only_key_1}
      OWN_OAUTH_CLIENT_SECRET_FOR_CLIENT_AUTH: ${OWN_OAUTH_CLIENT_SECRET_FOR_CLIENT_AUTH:-meadowlark_verify-only_secret_1}
      OAUTH_SERVER_ENDPOINT_FOR_OWN_TOKEN_REQUEST: ${OAUTH_SERVER_ENDPOINT_FOR_OWN_TOKEN_REQUEST:-http://localhost:3000/local/oauth/token}
      OAUTH_SERVER_ENDPOINT_FOR_TOKEN_VERIFICATION: ${OAUTH_SERVER_ENDPOINT_FOR_TOKEN_VERIFICATION:-http://localhost:3000/local/oauth/verify}
      OPENSEARCH_USERNAME: ${OPENSEARCH_USERNAME:-admin}
      OPENSEARCH_PASSWORD: ${OPENSEARCH_PASS:-admin}
      OPENSEARCH_ENDPOINT: ${OPENSEARCH_ENDPOINT:-http://opensearch:9200}
      DOCUMENT_STORE_PLUGIN: "${DOCUMENT_STORE_PLUGIN:-@edfi/meadowlark-mongodb-backend}"
      QUERY_HANDLER_PLUGIN: "${QUERY_HANDLER_PLUGIN:-@edfi/meadowlark-opensearch-backend}"
      LISTENER1_PLUGIN: "${LISTENER1_PLUGIN:-@edfi/meadowlark-opensearch-backend}"
      MONGO_URI: ${MONGO_URI}
      FASTIFY_RATE_LIMIT: ${FASTIFY_RATE_LIMIT:-false}
      FASTIFY_PORT: ${FASTIFY_PORT:-3000}
      FASTIFY_NUM_THREADS: ${FASTIFY_NUM_THREADS:-10}
      MEADOWLARK_STAGE: ${MEADOWLARK_STAGE:-local}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      IS_LOCAL: ${IS_LOCAL:-false}
      AUTHORIZATION_STORE_PLUGIN: "${AUTHORIZATION_STORE_PLUGIN:-@edfi/meadowlark-mongodb-backend}"
      BEGIN_ALLOWED_SCHOOL_YEAR: ${BEGIN_ALLOWED_SCHOOL_YEAR:-2022}
      END_ALLOWED_SCHOOL_YEAR: ${END_ALLOWED_SCHOOL_YEAR:-2034}
      ALLOW_TYPE_COERCION: ${ALLOW_TYPE_COERCION:-true}
      ALLOW__EXT_PROPERTY: ${ALLOW__EXT_PROPERTY:-true}
      MEADOWLARK_DATABASE_NAME: ${MEADOWLARK_DATABASE_NAME:-meadowlark}
      SAVE_LOG_TO_FILE: true
    restart: unless-stopped

  # Load Balancing
  lb:
    image: nginx:alpine
    volumes:
      - "./lb-conf/default.conf:/etc/nginx/conf.d/default.conf"
    networks:
      mynetwork:
        ipv4_address: 10.10.0.7
    ports:
      - "3000:3000"
    command: /bin/sh -c "nginx -g 'daemon off;'"
