version: '3'

volumes:
  mongo-ml-local-data1:
    labels:
      edfi-ml: local
  mongo-ml-local-log1:
    labels:
      edfi-ml: local
  mongo-ml-local-data2:
    labels:
      edfi-ml: local
  mongo-ml-local-log2:
    labels:
      edfi-ml: local
  mongo-ml-local-data3:
    labels:
      edfi-ml: local
  mongo-ml-local-log3:
    labels:
      edfi-ml: local
  mongo-ml-local-auth:
    external: true
  opensearch-ml-local-data:
    labels:
      edfi-ml: local

services:

  # Primary MongoDB node
  mongo1:
    image: edfi-mongo:4.0.28
    container_name: mongo1-ml-local
    hostname: mongo1
    ports:
      - 27027:27017
    restart: unless-stopped
    environment:
      # These two only needed on mongo1
      ADMIN_USERNAME: ${MONGODB_USER:-edfiuser}
      ADMIN_PASSWORD: ${MONGODB_PASS:-gapuser1234}
    healthcheck: &mongohealth
      test: echo 'db.runCommand({serverStatus:1}).ok' | mongo admin -u ${MONGODB_USER:-edfiuser} -p ${MONGODB_PASS:-gapuser1234} --quiet | grep 1
      interval: 10s
      timeout: 10s
      retries: 3
      # Wait a bit for first time startup to complete
      start_period: 40s
    command: [ "/usr/local/bin/start-node1.sh" ]
    volumes:
      - mongo-ml-local-data1:/data/db
      - mongo-ml-local-log1:/var/log/mongodb
      - mongo-ml-local-auth:/auth

  # Secondary MongoDB node
  mongo2:
    image: edfi-mongo:4.0.28
    container_name: mongo2-ml-local
    hostname: mongo2
    ports:
      - 27028:27017
    restart: unless-stopped
    healthcheck:
      *mongohealth
    command: [ "/usr/local/bin/start.sh" ]
    volumes:
      - mongo-ml-local-data2:/data/db
      - mongo-ml-local-log2:/var/log/mongodb
      - mongo-ml-local-auth:/auth

  # Tertiary MongoDB node
  mongo3:
    image: edfi-mongo:4.0.28
    container_name: mongo3-ml-local
    hostname: mongo3
    ports:
      - 27029:27017
    restart: unless-stopped
    healthcheck:
      *mongohealth
    command: [ "/usr/local/bin/start.sh" ]
    volumes:
      - mongo-ml-local-data3:/data/db
      - mongo-ml-local-log3:/var/log/mongodb
      - mongo-ml-local-auth:/auth

  # OpenSearch backend
  opensearch-ml-local:
    image: opensearchproject/opensearch:2.7.0@sha256:55f1f67e7d3645aa838b63a589bce5645154ba275814e52d4638d371ca0f8cb5
    container_name: opensearch-ml-local-node1
    hostname: opensearch
    environment:
      cluster.name: opensearch-cluster-ml-local
      bootstrap.memory_lock: "true" # along with the memlock settings below, disables swapping
      OPENSEARCH_JAVA_OPTS: -Xms512m -Xmx512m # minimum and maximum Java heap size, recommend setting both to 50% of system RAM
      discovery.type: single-node
      DISABLE_INSTALL_DEMO_CONFIG: "true" # disables execution of install_demo_configuration.sh bundled with security plugin, which installs demo certificates and security configurations to OpenSearch
      DISABLE_SECURITY_PLUGIN: "true" # disables security plugin entirely in OpenSearch by setting plugins.security.disabled: true in opensearch.yml
    mem_limit: 2g
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536 # maximum number of open files for the OpenSearch user, set to at least 65536 on modern systems
        hard: 65536
    volumes:
      - opensearch-ml-local-data:/usr/share/opensearch/data
    ports:
      - 9200:9200
      - 9601:9600 # required for Performance Analyzer
    restart: unless-stopped
    healthcheck:
      test: curl -s http://localhost:9200/_cat/health >/dev/null || exit 1
      interval: 30s
      timeout: 10s
      retries: 50

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:2.7.0@sha256:b08ba384fd2751fcccb95da4d65b0444694e4df4bf3079251ef9c7dfe6044a85
    container_name: opensearch-dashboards-ml-local
    ports:
      - 5602:5601
    environment:
      OPENSEARCH_HOSTS: '["http://opensearch-ml-local-node1:9200"]'
      DISABLE_SECURITY_DASHBOARDS_PLUGIN: true # disables security dashboards plugin in OpenSearch Dashboards
    restart: unless-stopped

  # Meadowlark API 1
  meadowlark-api-ml-local-1:
    # requires a local build, `npm run docker:build`.
    image: meadowlark:latest
    container_name: meadowlark-api-ml-local-1
    hostname: meadowlark-api-ml-local-1
    ports:
      - 3001:3000
    environment:
      OAUTH_SIGNING_KEY: ${OAUTH_SIGNING_KEY}
      # Next three settings should not be used as such in production environment
      OAUTH_HARD_CODED_CREDENTIALS_ENABLED: ${OAUTH_HARD_CODED_CREDENTIALS_ENABLED:-true}
      OWN_OAUTH_CLIENT_ID_FOR_CLIENT_AUTH: ${OWN_OAUTH_CLIENT_ID_FOR_CLIENT_AUTH:-meadowlark_verify-only_key_1}
      OWN_OAUTH_CLIENT_SECRET_FOR_CLIENT_AUTH: ${OWN_OAUTH_CLIENT_SECRET_FOR_CLIENT_AUTH:-meadowlark_verify-only_secret_1}
      OAUTH_SERVER_ENDPOINT_FOR_OWN_TOKEN_REQUEST: ${OAUTH_SERVER_ENDPOINT_FOR_OWN_TOKEN_REQUEST:-http://localhost:3000/local/oauth/token}
      OAUTH_SERVER_ENDPOINT_FOR_TOKEN_VERIFICATION: ${OAUTH_SERVER_ENDPOINT_FOR_TOKEN_VERIFICATION:-http://localhost:3000/local/oauth/verify}
      OPENSEARCH_USERNAME: ${OPENSEARCH_USERNAME:-admin}
      OPENSEARCH_PASSWORD: ${OPENSEARCH_PASS:-admin}
      OPENSEARCH_ENDPOINT: ${OPENSEARCH_ENDPOINT:-http://opensearch:9200}
      DOCUMENT_STORE_PLUGIN: "${DOCUMENT_STORE_PLUGIN:-@edfi/meadowlark-mongodb-backend}"
      QUERY_HANDLER_PLUGIN: "${QUERY_HANDLER_PLUGIN:-@edfi/meadowlark-opensearch-backend}"
      LISTENER1_PLUGIN: "${LISTENER1_PLUGIN:-@edfi/meadowlark-opensearch-backend}"
      MONGO_URI: ${MONGO_URI}
      FASTIFY_RATE_LIMIT: ${FASTIFY_RATE_LIMIT:-false}
      FASTIFY_PORT: ${FASTIFY_PORT:-3000}
      FASTIFY_NUM_THREADS: ${FASTIFY_NUM_THREADS:-10}
      MEADOWLARK_STAGE: ${MEADOWLARK_STAGE:-local}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      IS_LOCAL: ${IS_LOCAL:-false}
      AUTHORIZATION_STORE_PLUGIN: "${AUTHORIZATION_STORE_PLUGIN:-@edfi/meadowlark-mongodb-backend}"
      BEGIN_ALLOWED_SCHOOL_YEAR: ${BEGIN_ALLOWED_SCHOOL_YEAR:-2022}
      END_ALLOWED_SCHOOL_YEAR: ${END_ALLOWED_SCHOOL_YEAR:-2034}
      ALLOW_TYPE_COERCION: ${ALLOW_TYPE_COERCION:-true}
      ALLOW__EXT_PROPERTY: ${ALLOW__EXT_PROPERTY:-true}
      MEADOWLARK_DATABASE_NAME: ${MEADOWLARK_DATABASE_NAME:-meadowlark}
      SAVE_LOG_TO_FILE: true
    restart: unless-stopped

  # Meadowlark API 2
  meadowlark-api-ml-local-2:
    # requires a local build, `npm run docker:build`.
    image: meadowlark:latest
    container_name: meadowlark-api-ml-local-2
    hostname: meadowlark-api-ml-local-2
    ports:
      - 3002:3000
    environment:
      OAUTH_SIGNING_KEY: ${OAUTH_SIGNING_KEY}
      # Next three settings should not be used as such in production environment
      OAUTH_HARD_CODED_CREDENTIALS_ENABLED: ${OAUTH_HARD_CODED_CREDENTIALS_ENABLED:-true}
      OWN_OAUTH_CLIENT_ID_FOR_CLIENT_AUTH: ${OWN_OAUTH_CLIENT_ID_FOR_CLIENT_AUTH:-meadowlark_verify-only_key_1}
      OWN_OAUTH_CLIENT_SECRET_FOR_CLIENT_AUTH: ${OWN_OAUTH_CLIENT_SECRET_FOR_CLIENT_AUTH:-meadowlark_verify-only_secret_1}
      OAUTH_SERVER_ENDPOINT_FOR_OWN_TOKEN_REQUEST: ${OAUTH_SERVER_ENDPOINT_FOR_OWN_TOKEN_REQUEST:-http://localhost:3000/local/oauth/token}
      OAUTH_SERVER_ENDPOINT_FOR_TOKEN_VERIFICATION: ${OAUTH_SERVER_ENDPOINT_FOR_TOKEN_VERIFICATION:-http://localhost:3000/local/oauth/verify}
      OPENSEARCH_USERNAME: ${OPENSEARCH_USERNAME:-admin}
      OPENSEARCH_PASSWORD: ${OPENSEARCH_PASS:-admin}
      OPENSEARCH_ENDPOINT: ${OPENSEARCH_ENDPOINT:-http://opensearch:9200}
      DOCUMENT_STORE_PLUGIN: "${DOCUMENT_STORE_PLUGIN:-@edfi/meadowlark-mongodb-backend}"
      QUERY_HANDLER_PLUGIN: "${QUERY_HANDLER_PLUGIN:-@edfi/meadowlark-opensearch-backend}"
      LISTENER1_PLUGIN: "${LISTENER1_PLUGIN:-@edfi/meadowlark-opensearch-backend}"
      MONGO_URI: ${MONGO_URI}
      FASTIFY_RATE_LIMIT: ${FASTIFY_RATE_LIMIT:-false}
      FASTIFY_PORT: ${FASTIFY_PORT:-3000}
      FASTIFY_NUM_THREADS: ${FASTIFY_NUM_THREADS:-10}
      MEADOWLARK_STAGE: ${MEADOWLARK_STAGE:-local}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      IS_LOCAL: ${IS_LOCAL:-false}
      AUTHORIZATION_STORE_PLUGIN: "${AUTHORIZATION_STORE_PLUGIN:-@edfi/meadowlark-mongodb-backend}"
      BEGIN_ALLOWED_SCHOOL_YEAR: ${BEGIN_ALLOWED_SCHOOL_YEAR:-2022}
      END_ALLOWED_SCHOOL_YEAR: ${END_ALLOWED_SCHOOL_YEAR:-2034}
      ALLOW_TYPE_COERCION: ${ALLOW_TYPE_COERCION:-true}
      ALLOW__EXT_PROPERTY: ${ALLOW__EXT_PROPERTY:-true}
      MEADOWLARK_DATABASE_NAME: ${MEADOWLARK_DATABASE_NAME:-meadowlark}
      SAVE_LOG_TO_FILE: true
    restart: unless-stopped

  # Load Balancing
  lb:
    image: nginx:alpine
    volumes:
      - "./lb-conf/default.conf:/etc/nginx/conf.d/default.conf"
    ports:
      - "3000:3000"
    command: /bin/sh -c "nginx -g 'daemon off;'"
