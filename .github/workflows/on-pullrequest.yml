name: On Pull Request

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths:
      - "Meadowlark-js/**"
      - ".github/**"
  workflow_dispatch:

env:
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: abcdefgh1!

defaults:
  run:
    working-directory: Meadowlark-js

jobs:
  scan-actions:
    name: Scan Actions
    uses: ed-fi-alliance-oss/ed-fi-actions/.github/workflows/repository-scanner.yml@main

  analyze-code:
    if: github.event_name == 'pull_request'
    name: Analyze Code Dependencies
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0

      - name: Dependency Review ("Dependabot on PR")
        uses: actions/dependency-review-action@0ff3da6f81b812d4ec3cf37a04e2308c7a723730 # v3.0.2

  analyze:
    name: Analyze Code
    runs-on: ubuntu-latest
    env:
      SRC_DIR: Meadowlark-js
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0

      - name: Setup Node
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # v3.5.1
        with:
          node-version: "16"
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"

      - name: Node modules cache
        id: modules-cache
        uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7 #v3.0.11
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        if: ${{ steps.modules-cache.outputs.cache-hit != 'true' }}
        run: npm install

      - name: Initialize CodeQL
        uses: github/codeql-action/init@896079047b4bb059ba6f150a5d87d47dde99e6e5 # v2.11.6
        with:
          languages: "typescript"
          setup-python-dependencies: false

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@896079047b4bb059ba6f150a5d87d47dde99e6e5 # v2.11.6

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0

      - name: Setup Node
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # v3.5.1
        with:
          node-version: "16"
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"

      - name: Node modules cache
        id: modules-cache
        uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7 #v3.0.11
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        if: ${{ steps.modules-cache.outputs.cache-hit != 'true' }}
        run: npm install

      - name: Linter
        run: npm run test:lint

  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0

      - name: Setup Node
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # v3.5.1
        with:
          node-version: "16"
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"

      - name: Node modules cache
        id: modules-cache
        uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7 #v3.0.11
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        if: ${{ steps.modules-cache.outputs.cache-hit != 'true' }}
        run: npm install

      - name: Build Cache
        id: build-cache
        uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7 #v3.0.11
        with:
          path: "**/dist/**"
          key: ${{ runner.os }}-build-${{ hashFiles('**/dist/**') }}

      - name: Build
        if: ${{ steps.build-cache.outputs.cache-hit != 'true' }}
        run: npm run build

  tests:
    name: ${{matrix.tests.type}} tests
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        tests:
          [
            {
              type: "Unit",
              command: "npm run test:unit:coverage --ci --config ./jest.ci-config.js",
            },
            {
              type: "Integration",
              command: "npm run test:integration --ci --config ./jest.ci-config.js",
            },
            {
              type: "System",
              command: "npm run test:system --ci --config ./jest.ci-config.js",
            },
          ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0

      - name: Setup Node
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # v3.5.1
        with:
          node-version: "16"
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"

      - name: Load MongoDB binary cache
        id: cache-mongodb-binaries
        uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7 #v3.0.11
        with:
          path: ~/.cache/mongodb-binaries
          key: ${{ runner.os }}-mongo-${{ hashFiles('**/package-lock.json') }}

      - name: Node modules cache
        id: modules-cache
        uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7 #v3.0.11
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        if: ${{ steps.modules-cache.outputs.cache-hit != 'true' }}
        run: npm install

      - name: Configure postgres
        if: ${{ matrix.tests.type != 'Unit' }}
        run: |
          sudo systemctl start postgresql.service
          sudo -u postgres psql -U postgres -c "alter user postgres with password '${{env.POSTGRES_PASSWORD}}';"

      - name: Run ${{matrix.tests.type}} Tests
        run: ${{matrix.tests.command}}
        env:
          JEST_JUNIT_OUTPUT_DIR: ${{matrix.tests.type}}-tests

      - name: Archive coverage results
        if: ${{ matrix.tests.type == 'Unit' }}
        uses: actions/upload-artifact@83fd05a356d7e2593de66fc9913b3002723633cb # v3.1.1
        with:
          name: code-coverage-report
          path: Meadowlark-js/coverage/lcov-report
          retention-days: 10

      - name: Upload test results
        uses: actions/upload-artifact@83fd05a356d7e2593de66fc9913b3002723633cb # v3.1.1
        with:
          name: test-results
          path: |
            Meadowlark-js/${{matrix.tests.type}}-tests/junit.xml
            Meadowlark-js/.prettierrc
          retention-days: 1

  end-to-end:
    name: End to End tests for ${{ matrix.config.db }}
    needs: [lint, build]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        config:
          [
            { db: "Mongo", plugin: "@edfi/meadowlark-mongodb-backend" },
            { db: "PGSQL", plugin: "@edfi/meadowlark-postgresql-backend" },
          ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b # v3.2.0

      - name: Setup Node
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # v3.5.1
        with:
          node-version: "16"
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"

      - name: Load MongoDB binary cache
        id: cache-mongodb-binaries
        uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7 #v3.0.11
        with:
          path: ~/.cache/mongodb-binaries
          key: ${{ runner.os }}-mongo-${{ hashFiles('**/package-lock.json') }}

      - name: Node modules cache
        id: modules-cache
        uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7 #v3.0.11
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        if: ${{ steps.modules-cache.outputs.cache-hit != 'true' }}
        run: npm install

      - name: Build Cache
        id: build-cache
        uses: actions/cache@9b0c1fce7a93df8e3bb8926b0d6e9d89e92f20a7 #v3.0.11
        with:
          path: "**/dist/**"
          key: ${{ runner.os }}-build-${{ hashFiles('**/dist/**') }}

      - name: Build
        if: ${{ steps.build-cache.outputs.cache-hit != 'true' }}
        run: npm run build

      - name: End to End tests for ${{matrix.config.db}}
        run: |
          cp ./tests/e2e/automation-setup/e2e.env ./tests/e2e/.env
          npm run test:e2e --ci --reporters="default" --reporters="jest-junit"
        env:
          JEST_JUNIT_OUTPUT_DIR: ${{matrix.config.db}}-e2e-tests
          DOCUMENT_STORE_PLUGIN: ${{ matrix.config.plugin }}
          OPENSEARCH_USERNAME: admin
          OPENSEARCH_PASSWORD: admin
          MONGO_URL: "mongodb://127.0.0.1:42069/?replicaSet=rs0"

      # Workaround for issue https://github.com/actions/upload-artifact/issues/174
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@83fd05a356d7e2593de66fc9913b3002723633cb # v3.1.1
        with:
          name: test-results
          path: |
            Meadowlark-js/${{matrix.config.db}}-e2e-tests/junit.xml
            Meadowlark-js/.prettierrc
          retention-days: 1
